name: passpar2-api Api with Maven

on:
  push:
    branches: [ "*" ]  # Lors d'un push sur n'importe quelle branche
  pull_request:
    branches: [ "*" ]  # Lors d'une demande de pull sur n'importe quelle branche

jobs:
  build:
    runs-on: ubuntu-latest  # Le job s'exécute sur la dernière version d'Ubuntu disponible

    steps:
    - uses: actions/checkout@v4  # Action pour récupérer le code source du dépôt

    - name: Set up JDK 23  # Configuration de la version 23 de Java car l'API a été crée avec la version 23 et non 17
      uses: actions/setup-java@v4  # Action pour configurer Java
      with:
        java-version: '23'  # Spécifie la version de Java (23)
        distribution: 'corretto'  # Utilisation de la distribution Amazon Corretto de Java (d'autres auraient été envisageables)
        cache: maven  # Mise en cache des dépendances Maven pour améliorer la performance et éviter de retélécharger à chaque fois

    - name: Build with Maven  # Exécution de la commande de build Maven
      run: mvn -B package --file pom.xml  # Lancer la commande Maven pour empaqueter le projet

  deploy:
    needs: build  # Ce job dépend du job 'build', il sera exécuté après lui pour éviter de déployer une version défaillante
    runs-on: ubuntu-latest  # Le job s'exécute sur la dernière version d'Ubuntu disponible

    steps:
    - name: Restart API on VPS  # Exécution du relancement de l'API sur le VPS puis mise en place du tunnel SSH + exécution de update.sh
      run: |
        sshpass -p ${{ secrets.REMOTE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
          ./update.sh      
        EOF  
